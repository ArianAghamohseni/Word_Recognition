nohup: ignoring input
INFO:cmdstanpy:found newer exe file, not recompiling
INFO:cmdstanpy:Chain [1] start processing
INFO:cmdstanpy:Chain [2] start processing
INFO:cmdstanpy:Chain [3] start processing
INFO:cmdstanpy:Chain [4] start processing
INFO:cmdstanpy:Chain [3] done processing
INFO:cmdstanpy:Chain [4] done processing
INFO:cmdstanpy:Chain [1] done processing
INFO:cmdstanpy:Chain [2] done processing
Model name: ANN-RDM_s_am_BERT
Directory  Results/hierarchical/Plots/ANN-RDM_am_BERT/  Created 
Directory  Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/  Created 
Model's configs:
{'model_name': 'ANN-RDM_s_am_BERT', 'stan_file': 'ANN-RDM/sigmoid_am.stan', 'dataset_name': 'BERT.csv', 'plots_folder_name': 'ANN-RDM_am_BERT', 'transf_params': ['transf_mu_alpha', 'transf_mu_b', 'transf_mu_threshold_word', 'transf_mu_threshold_nonword', 'transf_mu_ndt', 'transf_mu_k_1', 'transf_mu_k_2']}
Chain [1] method = sample (Default)
Chain [1] sample
Chain [1] num_samples = 4000
Chain [1] num_warmup = 4000
Chain [1] save_warmup = 0 (Default)
Chain [1] thin = 1 (Default)
Chain [1] adapt
Chain [2] method = sample (Default)
Chain [2] sample
Chain [2] num_samples = 4000
Chain [1] engaged = 1 (Default)
Chain [1] gamma = 0.050000000000000003 (Default)
Chain [1] delta = 0.80000000000000004 (Default)
Chain [2] num_warmup = 4000
Chain [1] kappa = 0.75 (Default)
Chain [1] t0 = 10 (Default)
Chain [2] save_warmup = 0 (Default)
Chain [1] init_buffer = 75 (Default)
Chain [1] term_buffer = 50 (Default)
Chain [2] thin = 1 (Default)
Chain [1] window = 25 (Default)
Chain [1] algorithm = hmc (Default)
Chain [2] adapt
Chain [1] hmc
Chain [1] engine = nuts (Default)
Chain [2] engaged = 1 (Default)
Chain [1] nuts
Chain [1] max_depth = 10 (Default)
Chain [2] gamma = 0.050000000000000003 (Default)
Chain [1] metric = diag_e (Default)
Chain [1] metric_file =  (Default)
Chain [2] delta = 0.80000000000000004 (Default)
Chain [2] kappa = 0.75 (Default)
Chain [1] stepsize = 1 (Default)
Chain [1] stepsize_jitter = 0 (Default)
Chain [2] t0 = 10 (Default)
Chain [2] init_buffer = 75 (Default)
Chain [1] num_chains = 1 (Default)
Chain [2] term_buffer = 50 (Default)
Chain [1] id = 1 (Default)
Chain [1] data
Chain [2] window = 25 (Default)
Chain [2] algorithm = hmc (Default)
Chain [1] file = /tmp/tmpjxua0b2w/80oit56x.json
Chain [1] init = 2 (Default)
Chain [2] hmc
Chain [2] engine = nuts (Default)
Chain [1] random
Chain [1] seed = 1729
Chain [2] nuts
Chain [2] max_depth = 10 (Default)
Chain [1] output
Chain [1] file = /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_1.csv
Chain [2] metric = diag_e (Default)
Chain [2] metric_file =  (Default)
Chain [1] diagnostic_file =  (Default)
Chain [1] refresh = 100 (Default)
Chain [2] stepsize = 1 (Default)
Chain [2] stepsize_jitter = 0 (Default)
Chain [1] sig_figs = -1 (Default)
Chain [1] profile_file = profile.csv (Default)
Chain [2] num_chains = 1 (Default)
Chain [2] id = 2
Chain [2] data
Chain [1] num_threads = 1 (Default)
Chain [1] 
Chain [2] file = /tmp/tmpjxua0b2w/80oit56x.json
Chain [2] init = 2 (Default)
Chain [2] random
Chain [2] seed = 1729
Chain [2] output
Chain [2] file = /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_2.csv
Chain [2] diagnostic_file =  (Default)
Chain [2] refresh = 100 (Default)
Chain [2] sig_figs = -1 (Default)
Chain [2] profile_file = profile.csv (Default)
Chain [2] num_threads = 1 (Default)
Chain [2] 
Chain [4] method = sample (Default)
Chain [4] sample
Chain [4] num_samples = 4000
Chain [4] num_warmup = 4000
Chain [4] save_warmup = 0 (Default)
Chain [4] thin = 1 (Default)
Chain [4] adapt
Chain [4] engaged = 1 (Default)
Chain [4] gamma = 0.050000000000000003 (Default)
Chain [4] delta = 0.80000000000000004 (Default)
Chain [4] kappa = 0.75 (Default)
Chain [4] t0 = 10 (Default)
Chain [4] init_buffer = 75 (Default)
Chain [4] term_buffer = 50 (Default)
Chain [4] window = 25 (Default)
Chain [4] algorithm = hmc (Default)
Chain [4] hmc
Chain [4] engine = nuts (Default)
Chain [4] nuts
Chain [4] max_depth = 10 (Default)
Chain [4] metric = diag_e (Default)
Chain [4] metric_file =  (Default)
Chain [4] stepsize = 1 (Default)
Chain [4] stepsize_jitter = 0 (Default)
Chain [4] num_chains = 1 (Default)
Chain [4] id = 4
Chain [4] data
Chain [4] file = /tmp/tmpjxua0b2w/80oit56x.json
Chain [4] init = 2 (Default)
Chain [4] random
Chain [4] seed = 1729
Chain [4] output
Chain [4] file = /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_4.csv
Chain [4] diagnostic_file =  (Default)
Chain [4] refresh = 100 (Default)
Chain [4] sig_figs = -1 (Default)
Chain [4] profile_file = profile.csv (Default)
Chain [4] num_threads = 1 (Default)
Chain [4] 
Chain [3] method = sample (Default)
Chain [3] sample
Chain [3] num_samples = 4000
Chain [3] num_warmup = 4000
Chain [3] save_warmup = 0 (Default)
Chain [3] thin = 1 (Default)
Chain [3] adapt
Chain [3] engaged = 1 (Default)
Chain [3] gamma = 0.050000000000000003 (Default)
Chain [3] delta = 0.80000000000000004 (Default)
Chain [3] kappa = 0.75 (Default)
Chain [3] t0 = 10 (Default)
Chain [3] init_buffer = 75 (Default)
Chain [3] term_buffer = 50 (Default)
Chain [3] window = 25 (Default)
Chain [3] algorithm = hmc (Default)
Chain [3] hmc
Chain [3] engine = nuts (Default)
Chain [3] nuts
Chain [3] max_depth = 10 (Default)
Chain [3] metric = diag_e (Default)
Chain [3] metric_file =  (Default)
Chain [3] stepsize = 1 (Default)
Chain [3] stepsize_jitter = 0 (Default)
Chain [3] num_chains = 1 (Default)
Chain [3] id = 3
Chain [3] data
Chain [3] file = /tmp/tmpjxua0b2w/80oit56x.json
Chain [3] init = 2 (Default)
Chain [3] random
Chain [3] seed = 1729
Chain [3] output
Chain [3] file = /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_3.csv
Chain [3] diagnostic_file =  (Default)
Chain [3] refresh = 100 (Default)
Chain [3] sig_figs = -1 (Default)
Chain [3] profile_file = profile.csv (Default)
Chain [3] num_threads = 1 (Default)
Chain [3] 
Chain [2] 
Chain [2] Gradient evaluation took 0.094184 seconds
Chain [2] 1000 transitions using 10 leapfrog steps per transition would take 941.84 seconds.
Chain [2] Adjust your expectations accordingly!
Chain [2] 
Chain [2] 
Chain [3] 
Chain [3] Gradient evaluation took 0.066308 seconds
Chain [3] 1000 transitions using 10 leapfrog steps per transition would take 663.08 seconds.
Chain [3] Adjust your expectations accordingly!
Chain [3] 
Chain [3] 
Chain [1] 
Chain [1] Gradient evaluation took 0.111074 seconds
Chain [1] 1000 transitions using 10 leapfrog steps per transition would take 1110.74 seconds.
Chain [1] Adjust your expectations accordingly!
Chain [1] 
Chain [1] 
Chain [4] 
Chain [4] Gradient evaluation took 0.103522 seconds
Chain [4] 1000 transitions using 10 leapfrog steps per transition would take 1035.22 seconds.
Chain [4] Adjust your expectations accordingly!
Chain [4] 
Chain [4] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: sigmoid_am_model_namespace::log_prob: drift_word_t[3] is -nan, but must be greater than or equal to 0.000000 (in '/storage/users/adadras/ANN-EAM/models/stan/ANN-RDM/sigmoid_am.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: sigmoid_am_model_namespace::log_prob: drift_word_t[3] is -nan, but must be greater than or equal to 0.000000 (in '/storage/users/adadras/ANN-EAM/models/stan/ANN-RDM/sigmoid_am.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [3] Iteration:    1 / 8000 [  0%]  (Warmup)
Chain [2] Iteration:    1 / 8000 [  0%]  (Warmup)
Chain [4] Iteration:    1 / 8000 [  0%]  (Warmup)
Chain [1] Iteration:    1 / 8000 [  0%]  (Warmup)
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: sigmoid_am_model_namespace::log_prob: drift_word_t[3] is -nan, but must be greater than or equal to 0.000000 (in '/storage/users/adadras/ANN-EAM/models/stan/ANN-RDM/sigmoid_am.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [2] Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:
Chain [2] Exception: sigmoid_am_model_namespace::log_prob: drift_word_t[3] is -nan, but must be greater than or equal to 0.000000 (in '/storage/users/adadras/ANN-EAM/models/stan/ANN-RDM/sigmoid_am.stan', line 111, column 4 to column 36)
Chain [2] If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,
Chain [2] but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.
Chain [2] 
Chain [4] Iteration:  100 / 8000 [  1%]  (Warmup)
Chain [1] Iteration:  100 / 8000 [  1%]  (Warmup)
Chain [3] Iteration:  100 / 8000 [  1%]  (Warmup)
Chain [4] Iteration:  200 / 8000 [  2%]  (Warmup)
Chain [2] Iteration:  100 / 8000 [  1%]  (Warmup)
Chain [1] Iteration:  200 / 8000 [  2%]  (Warmup)
Chain [3] Iteration:  200 / 8000 [  2%]  (Warmup)
Chain [4] Iteration:  300 / 8000 [  3%]  (Warmup)
Chain [1] Iteration:  300 / 8000 [  3%]  (Warmup)
Chain [2] Iteration:  200 / 8000 [  2%]  (Warmup)
Chain [4] Iteration:  400 / 8000 [  5%]  (Warmup)
Chain [3] Iteration:  300 / 8000 [  3%]  (Warmup)
Chain [1] Iteration:  400 / 8000 [  5%]  (Warmup)
Chain [2] Iteration:  300 / 8000 [  3%]  (Warmup)
Chain [3] Iteration:  400 / 8000 [  5%]  (Warmup)
Chain [4] Iteration:  500 / 8000 [  6%]  (Warmup)
Chain [2] Iteration:  400 / 8000 [  5%]  (Warmup)
Chain [1] Iteration:  500 / 8000 [  6%]  (Warmup)
Chain [4] Iteration:  600 / 8000 [  7%]  (Warmup)
Chain [3] Iteration:  500 / 8000 [  6%]  (Warmup)
Chain [1] Iteration:  600 / 8000 [  7%]  (Warmup)
Chain [2] Iteration:  500 / 8000 [  6%]  (Warmup)
Chain [4] Iteration:  700 / 8000 [  8%]  (Warmup)
Chain [3] Iteration:  600 / 8000 [  7%]  (Warmup)
Chain [1] Iteration:  700 / 8000 [  8%]  (Warmup)
Chain [2] Iteration:  600 / 8000 [  7%]  (Warmup)
Chain [4] Iteration:  800 / 8000 [ 10%]  (Warmup)
Chain [3] Iteration:  700 / 8000 [  8%]  (Warmup)
Chain [1] Iteration:  800 / 8000 [ 10%]  (Warmup)
Chain [2] Iteration:  700 / 8000 [  8%]  (Warmup)
Chain [3] Iteration:  800 / 8000 [ 10%]  (Warmup)
Chain [4] Iteration:  900 / 8000 [ 11%]  (Warmup)
Chain [1] Iteration:  900 / 8000 [ 11%]  (Warmup)
Chain [2] Iteration:  800 / 8000 [ 10%]  (Warmup)
Chain [3] Iteration:  900 / 8000 [ 11%]  (Warmup)
Chain [4] Iteration: 1000 / 8000 [ 12%]  (Warmup)
Chain [1] Iteration: 1000 / 8000 [ 12%]  (Warmup)
Chain [2] Iteration:  900 / 8000 [ 11%]  (Warmup)
Chain [4] Iteration: 1100 / 8000 [ 13%]  (Warmup)
Chain [3] Iteration: 1000 / 8000 [ 12%]  (Warmup)
Chain [1] Iteration: 1100 / 8000 [ 13%]  (Warmup)
Chain [4] Iteration: 1200 / 8000 [ 15%]  (Warmup)
Chain [2] Iteration: 1000 / 8000 [ 12%]  (Warmup)
Chain [3] Iteration: 1100 / 8000 [ 13%]  (Warmup)
Chain [1] Iteration: 1200 / 8000 [ 15%]  (Warmup)
Chain [4] Iteration: 1300 / 8000 [ 16%]  (Warmup)
Chain [3] Iteration: 1200 / 8000 [ 15%]  (Warmup)
Chain [2] Iteration: 1100 / 8000 [ 13%]  (Warmup)
Chain [1] Iteration: 1300 / 8000 [ 16%]  (Warmup)
Chain [4] Iteration: 1400 / 8000 [ 17%]  (Warmup)
Chain [3] Iteration: 1300 / 8000 [ 16%]  (Warmup)
Chain [2] Iteration: 1200 / 8000 [ 15%]  (Warmup)
Chain [1] Iteration: 1400 / 8000 [ 17%]  (Warmup)
Chain [4] Iteration: 1500 / 8000 [ 18%]  (Warmup)
Chain [3] Iteration: 1400 / 8000 [ 17%]  (Warmup)
Chain [2] Iteration: 1300 / 8000 [ 16%]  (Warmup)
Chain [1] Iteration: 1500 / 8000 [ 18%]  (Warmup)
Chain [4] Iteration: 1600 / 8000 [ 20%]  (Warmup)
Chain [3] Iteration: 1500 / 8000 [ 18%]  (Warmup)
Chain [2] Iteration: 1400 / 8000 [ 17%]  (Warmup)
Chain [1] Iteration: 1600 / 8000 [ 20%]  (Warmup)
Chain [3] Iteration: 1600 / 8000 [ 20%]  (Warmup)
Chain [2] Iteration: 1500 / 8000 [ 18%]  (Warmup)
Chain [4] Iteration: 1700 / 8000 [ 21%]  (Warmup)
Chain [1] Iteration: 1700 / 8000 [ 21%]  (Warmup)
Chain [2] Iteration: 1600 / 8000 [ 20%]  (Warmup)
Chain [3] Iteration: 1700 / 8000 [ 21%]  (Warmup)
Chain [4] Iteration: 1800 / 8000 [ 22%]  (Warmup)
Chain [1] Iteration: 1800 / 8000 [ 22%]  (Warmup)
Chain [3] Iteration: 1800 / 8000 [ 22%]  (Warmup)
Chain [4] Iteration: 1900 / 8000 [ 23%]  (Warmup)
Chain [2] Iteration: 1700 / 8000 [ 21%]  (Warmup)
Chain [1] Iteration: 1900 / 8000 [ 23%]  (Warmup)
Chain [3] Iteration: 1900 / 8000 [ 23%]  (Warmup)
Chain [4] Iteration: 2000 / 8000 [ 25%]  (Warmup)
Chain [1] Iteration: 2000 / 8000 [ 25%]  (Warmup)
Chain [2] Iteration: 1800 / 8000 [ 22%]  (Warmup)
Chain [3] Iteration: 2000 / 8000 [ 25%]  (Warmup)
Chain [1] Iteration: 2100 / 8000 [ 26%]  (Warmup)
Chain [4] Iteration: 2100 / 8000 [ 26%]  (Warmup)
Chain [2] Iteration: 1900 / 8000 [ 23%]  (Warmup)
Chain [3] Iteration: 2100 / 8000 [ 26%]  (Warmup)
Chain [1] Iteration: 2200 / 8000 [ 27%]  (Warmup)
Chain [4] Iteration: 2200 / 8000 [ 27%]  (Warmup)
Chain [2] Iteration: 2000 / 8000 [ 25%]  (Warmup)
Chain [3] Iteration: 2200 / 8000 [ 27%]  (Warmup)
Chain [1] Iteration: 2300 / 8000 [ 28%]  (Warmup)
Chain [4] Iteration: 2300 / 8000 [ 28%]  (Warmup)
Chain [2] Iteration: 2100 / 8000 [ 26%]  (Warmup)
Chain [3] Iteration: 2300 / 8000 [ 28%]  (Warmup)
Chain [1] Iteration: 2400 / 8000 [ 30%]  (Warmup)
Chain [4] Iteration: 2400 / 8000 [ 30%]  (Warmup)
Chain [2] Iteration: 2200 / 8000 [ 27%]  (Warmup)
Chain [3] Iteration: 2400 / 8000 [ 30%]  (Warmup)
Chain [1] Iteration: 2500 / 8000 [ 31%]  (Warmup)
Chain [4] Iteration: 2500 / 8000 [ 31%]  (Warmup)
Chain [2] Iteration: 2300 / 8000 [ 28%]  (Warmup)
Chain [3] Iteration: 2500 / 8000 [ 31%]  (Warmup)
Chain [1] Iteration: 2600 / 8000 [ 32%]  (Warmup)
Chain [4] Iteration: 2600 / 8000 [ 32%]  (Warmup)
Chain [2] Iteration: 2400 / 8000 [ 30%]  (Warmup)
Chain [3] Iteration: 2600 / 8000 [ 32%]  (Warmup)
Chain [1] Iteration: 2700 / 8000 [ 33%]  (Warmup)
Chain [4] Iteration: 2700 / 8000 [ 33%]  (Warmup)
Chain [2] Iteration: 2500 / 8000 [ 31%]  (Warmup)
Chain [3] Iteration: 2700 / 8000 [ 33%]  (Warmup)
Chain [1] Iteration: 2800 / 8000 [ 35%]  (Warmup)
Chain [4] Iteration: 2800 / 8000 [ 35%]  (Warmup)
Chain [2] Iteration: 2600 / 8000 [ 32%]  (Warmup)
Chain [3] Iteration: 2800 / 8000 [ 35%]  (Warmup)
Chain [1] Iteration: 2900 / 8000 [ 36%]  (Warmup)
Chain [2] Iteration: 2700 / 8000 [ 33%]  (Warmup)
Chain [4] Iteration: 2900 / 8000 [ 36%]  (Warmup)
Chain [3] Iteration: 2900 / 8000 [ 36%]  (Warmup)
Chain [1] Iteration: 3000 / 8000 [ 37%]  (Warmup)
Chain [2] Iteration: 2800 / 8000 [ 35%]  (Warmup)
Chain [4] Iteration: 3000 / 8000 [ 37%]  (Warmup)
Chain [3] Iteration: 3000 / 8000 [ 37%]  (Warmup)
Chain [1] Iteration: 3100 / 8000 [ 38%]  (Warmup)
Chain [2] Iteration: 2900 / 8000 [ 36%]  (Warmup)
Chain [4] Iteration: 3100 / 8000 [ 38%]  (Warmup)
Chain [3] Iteration: 3100 / 8000 [ 38%]  (Warmup)
Chain [1] Iteration: 3200 / 8000 [ 40%]  (Warmup)
Chain [2] Iteration: 3000 / 8000 [ 37%]  (Warmup)
Chain [3] Iteration: 3200 / 8000 [ 40%]  (Warmup)
Chain [4] Iteration: 3200 / 8000 [ 40%]  (Warmup)
Chain [1] Iteration: 3300 / 8000 [ 41%]  (Warmup)
Chain [2] Iteration: 3100 / 8000 [ 38%]  (Warmup)
Chain [3] Iteration: 3300 / 8000 [ 41%]  (Warmup)
Chain [4] Iteration: 3300 / 8000 [ 41%]  (Warmup)
Chain [1] Iteration: 3400 / 8000 [ 42%]  (Warmup)
Chain [2] Iteration: 3200 / 8000 [ 40%]  (Warmup)
Chain [3] Iteration: 3400 / 8000 [ 42%]  (Warmup)
Chain [4] Iteration: 3400 / 8000 [ 42%]  (Warmup)
Chain [1] Iteration: 3500 / 8000 [ 43%]  (Warmup)
Chain [2] Iteration: 3300 / 8000 [ 41%]  (Warmup)
Chain [3] Iteration: 3500 / 8000 [ 43%]  (Warmup)
Chain [4] Iteration: 3500 / 8000 [ 43%]  (Warmup)
Chain [1] Iteration: 3600 / 8000 [ 45%]  (Warmup)
Chain [2] Iteration: 3400 / 8000 [ 42%]  (Warmup)
Chain [3] Iteration: 3600 / 8000 [ 45%]  (Warmup)
Chain [4] Iteration: 3600 / 8000 [ 45%]  (Warmup)
Chain [1] Iteration: 3700 / 8000 [ 46%]  (Warmup)
Chain [3] Iteration: 3700 / 8000 [ 46%]  (Warmup)
Chain [2] Iteration: 3500 / 8000 [ 43%]  (Warmup)
Chain [4] Iteration: 3700 / 8000 [ 46%]  (Warmup)
Chain [1] Iteration: 3800 / 8000 [ 47%]  (Warmup)
Chain [3] Iteration: 3800 / 8000 [ 47%]  (Warmup)
Chain [2] Iteration: 3600 / 8000 [ 45%]  (Warmup)
Chain [4] Iteration: 3800 / 8000 [ 47%]  (Warmup)
Chain [1] Iteration: 3900 / 8000 [ 48%]  (Warmup)
Chain [3] Iteration: 3900 / 8000 [ 48%]  (Warmup)
Chain [2] Iteration: 3700 / 8000 [ 46%]  (Warmup)
Chain [4] Iteration: 3900 / 8000 [ 48%]  (Warmup)
Chain [1] Iteration: 4000 / 8000 [ 50%]  (Warmup)
Chain [1] Iteration: 4001 / 8000 [ 50%]  (Sampling)
Chain [2] Iteration: 3800 / 8000 [ 47%]  (Warmup)
Chain [3] Iteration: 4000 / 8000 [ 50%]  (Warmup)
Chain [3] Iteration: 4001 / 8000 [ 50%]  (Sampling)
Chain [4] Iteration: 4000 / 8000 [ 50%]  (Warmup)
Chain [4] Iteration: 4001 / 8000 [ 50%]  (Sampling)
Chain [2] Iteration: 3900 / 8000 [ 48%]  (Warmup)
Chain [1] Iteration: 4100 / 8000 [ 51%]  (Sampling)
Chain [3] Iteration: 4100 / 8000 [ 51%]  (Sampling)
Chain [4] Iteration: 4100 / 8000 [ 51%]  (Sampling)
Chain [2] Iteration: 4000 / 8000 [ 50%]  (Warmup)
Chain [2] Iteration: 4001 / 8000 [ 50%]  (Sampling)
Chain [1] Iteration: 4200 / 8000 [ 52%]  (Sampling)
Chain [3] Iteration: 4200 / 8000 [ 52%]  (Sampling)
Chain [4] Iteration: 4200 / 8000 [ 52%]  (Sampling)
Chain [2] Iteration: 4100 / 8000 [ 51%]  (Sampling)
Chain [3] Iteration: 4300 / 8000 [ 53%]  (Sampling)
Chain [1] Iteration: 4300 / 8000 [ 53%]  (Sampling)
Chain [4] Iteration: 4300 / 8000 [ 53%]  (Sampling)
Chain [3] Iteration: 4400 / 8000 [ 55%]  (Sampling)
Chain [2] Iteration: 4200 / 8000 [ 52%]  (Sampling)
Chain [1] Iteration: 4400 / 8000 [ 55%]  (Sampling)
Chain [4] Iteration: 4400 / 8000 [ 55%]  (Sampling)
Chain [3] Iteration: 4500 / 8000 [ 56%]  (Sampling)
Chain [2] Iteration: 4300 / 8000 [ 53%]  (Sampling)
Chain [1] Iteration: 4500 / 8000 [ 56%]  (Sampling)
Chain [4] Iteration: 4500 / 8000 [ 56%]  (Sampling)
Chain [3] Iteration: 4600 / 8000 [ 57%]  (Sampling)
Chain [2] Iteration: 4400 / 8000 [ 55%]  (Sampling)
Chain [1] Iteration: 4600 / 8000 [ 57%]  (Sampling)
Chain [4] Iteration: 4600 / 8000 [ 57%]  (Sampling)
Chain [3] Iteration: 4700 / 8000 [ 58%]  (Sampling)
Chain [2] Iteration: 4500 / 8000 [ 56%]  (Sampling)
Chain [1] Iteration: 4700 / 8000 [ 58%]  (Sampling)
Chain [4] Iteration: 4700 / 8000 [ 58%]  (Sampling)
Chain [3] Iteration: 4800 / 8000 [ 60%]  (Sampling)
Chain [2] Iteration: 4600 / 8000 [ 57%]  (Sampling)
Chain [1] Iteration: 4800 / 8000 [ 60%]  (Sampling)
Chain [4] Iteration: 4800 / 8000 [ 60%]  (Sampling)
Chain [3] Iteration: 4900 / 8000 [ 61%]  (Sampling)
Chain [2] Iteration: 4700 / 8000 [ 58%]  (Sampling)
Chain [1] Iteration: 4900 / 8000 [ 61%]  (Sampling)
Chain [4] Iteration: 4900 / 8000 [ 61%]  (Sampling)
Chain [3] Iteration: 5000 / 8000 [ 62%]  (Sampling)
Chain [2] Iteration: 4800 / 8000 [ 60%]  (Sampling)
Chain [1] Iteration: 5000 / 8000 [ 62%]  (Sampling)
Chain [3] Iteration: 5100 / 8000 [ 63%]  (Sampling)
Chain [4] Iteration: 5000 / 8000 [ 62%]  (Sampling)
Chain [2] Iteration: 4900 / 8000 [ 61%]  (Sampling)
Chain [1] Iteration: 5100 / 8000 [ 63%]  (Sampling)
Chain [3] Iteration: 5200 / 8000 [ 65%]  (Sampling)
Chain [4] Iteration: 5100 / 8000 [ 63%]  (Sampling)
Chain [2] Iteration: 5000 / 8000 [ 62%]  (Sampling)
Chain [1] Iteration: 5200 / 8000 [ 65%]  (Sampling)
Chain [3] Iteration: 5300 / 8000 [ 66%]  (Sampling)
Chain [4] Iteration: 5200 / 8000 [ 65%]  (Sampling)
Chain [2] Iteration: 5100 / 8000 [ 63%]  (Sampling)
Chain [1] Iteration: 5300 / 8000 [ 66%]  (Sampling)
Chain [3] Iteration: 5400 / 8000 [ 67%]  (Sampling)
Chain [4] Iteration: 5300 / 8000 [ 66%]  (Sampling)
Chain [2] Iteration: 5200 / 8000 [ 65%]  (Sampling)
Chain [1] Iteration: 5400 / 8000 [ 67%]  (Sampling)
Chain [3] Iteration: 5500 / 8000 [ 68%]  (Sampling)
Chain [4] Iteration: 5400 / 8000 [ 67%]  (Sampling)
Chain [2] Iteration: 5300 / 8000 [ 66%]  (Sampling)
Chain [3] Iteration: 5600 / 8000 [ 70%]  (Sampling)
Chain [1] Iteration: 5500 / 8000 [ 68%]  (Sampling)
Chain [4] Iteration: 5500 / 8000 [ 68%]  (Sampling)
Chain [2] Iteration: 5400 / 8000 [ 67%]  (Sampling)
Chain [3] Iteration: 5700 / 8000 [ 71%]  (Sampling)
Chain [1] Iteration: 5600 / 8000 [ 70%]  (Sampling)
Chain [4] Iteration: 5600 / 8000 [ 70%]  (Sampling)
Chain [2] Iteration: 5500 / 8000 [ 68%]  (Sampling)
Chain [3] Iteration: 5800 / 8000 [ 72%]  (Sampling)
Chain [1] Iteration: 5700 / 8000 [ 71%]  (Sampling)
Chain [4] Iteration: 5700 / 8000 [ 71%]  (Sampling)
Chain [2] Iteration: 5600 / 8000 [ 70%]  (Sampling)
Chain [3] Iteration: 5900 / 8000 [ 73%]  (Sampling)
Chain [1] Iteration: 5800 / 8000 [ 72%]  (Sampling)
Chain [4] Iteration: 5800 / 8000 [ 72%]  (Sampling)
Chain [2] Iteration: 5700 / 8000 [ 71%]  (Sampling)
Chain [3] Iteration: 6000 / 8000 [ 75%]  (Sampling)
Chain [1] Iteration: 5900 / 8000 [ 73%]  (Sampling)
Chain [4] Iteration: 5900 / 8000 [ 73%]  (Sampling)
Chain [2] Iteration: 5800 / 8000 [ 72%]  (Sampling)
Chain [3] Iteration: 6100 / 8000 [ 76%]  (Sampling)
Chain [1] Iteration: 6000 / 8000 [ 75%]  (Sampling)
Chain [4] Iteration: 6000 / 8000 [ 75%]  (Sampling)
Chain [2] Iteration: 5900 / 8000 [ 73%]  (Sampling)
Chain [3] Iteration: 6200 / 8000 [ 77%]  (Sampling)
Chain [1] Iteration: 6100 / 8000 [ 76%]  (Sampling)
Chain [4] Iteration: 6100 / 8000 [ 76%]  (Sampling)
Chain [2] Iteration: 6000 / 8000 [ 75%]  (Sampling)
Chain [3] Iteration: 6300 / 8000 [ 78%]  (Sampling)
Chain [1] Iteration: 6200 / 8000 [ 77%]  (Sampling)
Chain [4] Iteration: 6200 / 8000 [ 77%]  (Sampling)
Chain [2] Iteration: 6100 / 8000 [ 76%]  (Sampling)
Chain [3] Iteration: 6400 / 8000 [ 80%]  (Sampling)
Chain [1] Iteration: 6300 / 8000 [ 78%]  (Sampling)
Chain [4] Iteration: 6300 / 8000 [ 78%]  (Sampling)
Chain [3] Iteration: 6500 / 8000 [ 81%]  (Sampling)
Chain [2] Iteration: 6200 / 8000 [ 77%]  (Sampling)
Chain [1] Iteration: 6400 / 8000 [ 80%]  (Sampling)
Chain [4] Iteration: 6400 / 8000 [ 80%]  (Sampling)
Chain [3] Iteration: 6600 / 8000 [ 82%]  (Sampling)
Chain [2] Iteration: 6300 / 8000 [ 78%]  (Sampling)
Chain [3] Iteration: 6700 / 8000 [ 83%]  (Sampling)
Chain [1] Iteration: 6500 / 8000 [ 81%]  (Sampling)
Chain [4] Iteration: 6500 / 8000 [ 81%]  (Sampling)
Chain [2] Iteration: 6400 / 8000 [ 80%]  (Sampling)
Chain [3] Iteration: 6800 / 8000 [ 85%]  (Sampling)
Chain [4] Iteration: 6600 / 8000 [ 82%]  (Sampling)
Chain [1] Iteration: 6600 / 8000 [ 82%]  (Sampling)
Chain [2] Iteration: 6500 / 8000 [ 81%]  (Sampling)
Chain [3] Iteration: 6900 / 8000 [ 86%]  (Sampling)
Chain [4] Iteration: 6700 / 8000 [ 83%]  (Sampling)
Chain [1] Iteration: 6700 / 8000 [ 83%]  (Sampling)
Chain [2] Iteration: 6600 / 8000 [ 82%]  (Sampling)
Chain [3] Iteration: 7000 / 8000 [ 87%]  (Sampling)
Chain [4] Iteration: 6800 / 8000 [ 85%]  (Sampling)
Chain [1] Iteration: 6800 / 8000 [ 85%]  (Sampling)
Chain [2] Iteration: 6700 / 8000 [ 83%]  (Sampling)
Chain [3] Iteration: 7100 / 8000 [ 88%]  (Sampling)
Chain [4] Iteration: 6900 / 8000 [ 86%]  (Sampling)
Chain [2] Iteration: 6800 / 8000 [ 85%]  (Sampling)
Chain [1] Iteration: 6900 / 8000 [ 86%]  (Sampling)
Chain [3] Iteration: 7200 / 8000 [ 90%]  (Sampling)
Chain [4] Iteration: 7000 / 8000 [ 87%]  (Sampling)
Chain [2] Iteration: 6900 / 8000 [ 86%]  (Sampling)
Chain [1] Iteration: 7000 / 8000 [ 87%]  (Sampling)
Chain [3] Iteration: 7300 / 8000 [ 91%]  (Sampling)
Chain [4] Iteration: 7100 / 8000 [ 88%]  (Sampling)
Chain [2] Iteration: 7000 / 8000 [ 87%]  (Sampling)
Chain [1] Iteration: 7100 / 8000 [ 88%]  (Sampling)
Chain [3] Iteration: 7400 / 8000 [ 92%]  (Sampling)
Chain [2] Iteration: 7100 / 8000 [ 88%]  (Sampling)
Chain [4] Iteration: 7200 / 8000 [ 90%]  (Sampling)
Chain [1] Iteration: 7200 / 8000 [ 90%]  (Sampling)
Chain [3] Iteration: 7500 / 8000 [ 93%]  (Sampling)
Chain [2] Iteration: 7200 / 8000 [ 90%]  (Sampling)
Chain [4] Iteration: 7300 / 8000 [ 91%]  (Sampling)
Chain [1] Iteration: 7300 / 8000 [ 91%]  (Sampling)
Chain [3] Iteration: 7600 / 8000 [ 95%]  (Sampling)
Chain [2] Iteration: 7300 / 8000 [ 91%]  (Sampling)
Chain [4] Iteration: 7400 / 8000 [ 92%]  (Sampling)
Chain [1] Iteration: 7400 / 8000 [ 92%]  (Sampling)
Chain [3] Iteration: 7700 / 8000 [ 96%]  (Sampling)
Chain [2] Iteration: 7400 / 8000 [ 92%]  (Sampling)
Chain [4] Iteration: 7500 / 8000 [ 93%]  (Sampling)
Chain [1] Iteration: 7500 / 8000 [ 93%]  (Sampling)
Chain [3] Iteration: 7800 / 8000 [ 97%]  (Sampling)
Chain [2] Iteration: 7500 / 8000 [ 93%]  (Sampling)
Chain [4] Iteration: 7600 / 8000 [ 95%]  (Sampling)
Chain [1] Iteration: 7600 / 8000 [ 95%]  (Sampling)
Chain [3] Iteration: 7900 / 8000 [ 98%]  (Sampling)
Chain [2] Iteration: 7600 / 8000 [ 95%]  (Sampling)
Chain [4] Iteration: 7700 / 8000 [ 96%]  (Sampling)
Chain [1] Iteration: 7700 / 8000 [ 96%]  (Sampling)
Chain [3] Iteration: 8000 / 8000 [100%]  (Sampling)
Chain [3] 
Chain [3] Elapsed Time: 28661.8 seconds (Warm-up)
Chain [3] 26842.7 seconds (Sampling)
Chain [3] 55504.5 seconds (Total)
Chain [3] 
Chain [3] 
Chain [2] Iteration: 7700 / 8000 [ 96%]  (Sampling)
Chain [4] Iteration: 7800 / 8000 [ 97%]  (Sampling)
Chain [1] Iteration: 7800 / 8000 [ 97%]  (Sampling)
Chain [2] Iteration: 7800 / 8000 [ 97%]  (Sampling)
Chain [4] Iteration: 7900 / 8000 [ 98%]  (Sampling)
Chain [1] Iteration: 7900 / 8000 [ 98%]  (Sampling)
Chain [2] Iteration: 7900 / 8000 [ 98%]  (Sampling)
Chain [4] Iteration: 8000 / 8000 [100%]  (Sampling)
Chain [4] 
Chain [4] Elapsed Time: 28834.4 seconds (Warm-up)
Chain [4] 28770.3 seconds (Sampling)
Chain [4] 57604.7 seconds (Total)
Chain [4] 
Chain [4] 
Chain [1] Iteration: 8000 / 8000 [100%]  (Sampling)
Chain [1] 
Chain [1] Elapsed Time: 28426.7 seconds (Warm-up)
Chain [1] 29379.3 seconds (Sampling)
Chain [1] 57806 seconds (Total)
Chain [1] 
Chain [1] 
Chain [2] Iteration: 8000 / 8000 [100%]  (Sampling)
Chain [2] 
Chain [2] Elapsed Time: 29924.6 seconds (Warm-up)
Chain [2] 28009.6 seconds (Sampling)
Chain [2] 57934.2 seconds (Total)
Chain [2] 
Chain [2] 
***hmc diagnostics:
Processing csv files: /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_1.csv, /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_2.csv, /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_3.csv, /storage/users/adadras/ANN-EAM/Estimations/Results/hierarchical/stan_results/ANN-RDM_s_am_BERT/ANN-RDM_s_am_BERT-20230619180705_4.csv

Checking sampler transitions treedepth.
Treedepth satisfactory for all transitions.

Checking sampler transitions for divergences.
No divergent transitions found.

Checking E-BFMI - sampler transitions HMC potential energy.
E-BFMI satisfactory.

Effective sample size satisfactory.

Split R-hat values satisfactory all parameters.

Processing complete, no problems detected.

***DF: 
                         Mean     MCSE  StdDev  ...    N_Eff  N_Eff/s  R_hat
name                                            ...                         
lp__                 -6100.00  0.47000  27.000  ...   3400.0    0.030    1.0
mu_ndt                  -0.54  0.00220   0.099  ...   2100.0    0.019    1.0
mu_threshold_word        1.50  0.00068   0.040  ...   3500.0    0.031    1.0
mu_threshold_nonword     1.80  0.00062   0.041  ...   4500.0    0.040    1.0
mu_alpha                 1.30  0.00083   0.074  ...   8100.0    0.071    1.0
...                       ...      ...     ...  ...      ...      ...    ...
log_lik[36782]          -3.40  0.00130   0.210  ...  24574.0    0.220    1.0
log_lik[36783]          -3.50  0.00140   0.210  ...  24654.0    0.220    1.0
log_lik[36784]          -3.60  0.00150   0.220  ...  20267.0    0.180    1.0
log_lik[36785]          -3.60  0.00130   0.210  ...  24477.0    0.220    1.0
log_lik[36786]          -4.00  0.00180   0.270  ...  23888.0    0.210    1.0

[222138 rows x 9 columns]
***Rhat > 1.01: 
0
Empty DataFrame
Columns: [Mean, MCSE, StdDev, 5%, 50%, 95%, N_Eff, N_Eff/s, R_hat]
Index: []
       Mean  MCSE  StdDev   5%  50%  95%  N_Eff  N_Eff/s  R_hat
count   0.0   0.0     0.0  0.0  0.0  0.0    0.0      0.0    0.0
mean    NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
std     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
min     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
25%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
50%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
75%     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
max     NaN   NaN     NaN  NaN  NaN  NaN    NaN      NaN    NaN
HF words, word drift mean and std:
3.96958192397533 0.026805938228335192
HF words, nonword drift mean and std:
1.5776702246764154 0.028686989631935778
LF words word drift mean and std:
2.748472965253113 0.025960864825333628
LF words nonword drift mean and std:
1.7875169550711616 0.02700615351907671
NW words word drift mean and std:
0.9186698689378809 0.02368639885668577
NW words nonword drift mean and std:
3.0926744335918777 0.02226527792764994
HF words, word threshold mean and std:
1.6763680151139624 0.019024267242348562
HF words, nonword threshold mean and std:
1.9407646361345514 0.018934974900975256
LF words word threshold mean and std:
1.6727693601442615 0.018785988201066896
LF words nonword threshold mean and std:
1.9367881699479887 0.018769931233304966
NW words word threshold mean and std:
1.6763351992985054 0.018777189119932043
NW words nonword threshold mean and std:
1.9348343513427406 0.01868353140796957
HF words ndt_t mean and std:
0.23027553437650944 0.0031301907663689107
LF words ndt_t mean and std:
0.22929474013071643 0.0030715926926861703
Non Words ndt_t mean and std:
0.229303404198144 0.00309135146581893
Estimation Fit metrics:
{'lppd': -5372.989497544939, 'p_waic': 749.399210170415, 'waic': 12244.777415430708, 'waic_se': 485.10925263693514}
INFO:cmdstanpy:deleting tmpfiles dir: /tmp/tmpjxua0b2w
INFO:cmdstanpy:done
